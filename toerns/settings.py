"""
---------------------------------------------------------------------
Django settings for Bernt's Toerns project.

Generated by 'django-admin startproject xxx' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/

Web Development with Django
https://pythonprogramming.net/django-web-development-python-tutorial/

in pythonanywhere Bash console:
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa_django
git pull git@github.com:volkerpetersen/andreas_django.git

py manage.py makemigrations
py manage.py migrate 

site admin page /admin  UN:helgaas  PW:raceAdmin

install a python package in pythonanywhere:
pip install --user package_name

cd '/D/VolkerPetersen/Google Drive/ProgramCode/Python_Projects/DjangoWebsites/andreas_django'
git remote set-url origin https://volkerpetersen:b4c8e7f1052f4b25a65c38ba977014608f991a86@github.com/volkerpetersen/DjangoWebsites.git
  
---------------------------------------------------------------------
"""

from pathlib import Path
import environ, os
import re
from django.template import base

# To break the given Django template tag into multiple lines, 
# you need to override Django's default regex to allow newlines
base.tag_re = re.compile(base.tag_re.pattern, re.DOTALL)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# print(f"\nBASEDIR: {BASE_DIR}")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# read the environment parameters from file .env in same folder as settings.py
# requires python -m pip install django-environ
env = environ.Env()
environ.Env.read_env()

# read the secret key and SQLite DB name from .env file in this folder
SECRET_KEY = env('SECRET_KEY')
SQLITE = env('SQLITE')

# Application definition
INSTALLED_APPS = [
    'jazzmin',
    "django.contrib.staticfiles",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django_user_agents",
    "django.contrib.humanize",
    "toerns",
]

MIDDLEWARE = [
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]

ROOT_URLCONF = "toerns.urls"
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / SQLITE,
    },
}

# config media area for route file upload
MEDIA_ROOT = os.path.join(
    BASE_DIR, 'static/')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
STATIC_URL = "/static/"

STATICFILES_DIRS = [
    os.path.normpath(os.path.join(BASE_DIR, "static")),
]

# comment out STATICFILES_DIR and uncomment STATIC_ROOT
# prior to running python manage.py collectstatic
# for running python manage.py runserver go back to
# STATICFILES_DIR active and STATIC_ROOT inactive
#STATIC_ROOT = os.path.join(BASE_DIR, 'static')

WSGI_APPLICATION = "toerns.wsgi.application"

if ("ProgramCode" in __file__):
    # development environment
    ALLOWED_HOSTS = ["localhost", "127.0.0.1", "testserver"]

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True
else:
    # production environment
    ALLOWED_HOSTS = ["andreas61667.pythonanywhere.com"]

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = False
# end of environment parameters
#print(f"ALLOWED_HOSTS:   {ALLOWED_HOSTS[0]}")
#print(f"STATICFILES_DIR: {STATICFILES_DIRS[0]}\n")

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator", },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator", },
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator", },
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator", },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

DEFAULT_CHARSET = "utf-8"

# https://django-jazzmin.readthedocs.io/configuration/
JAZZMIN_SETTINGS = {
    "custom_links": {
        "toerns": [
            {
            "name": "Upload Content",
            "url": "/updateTrip",
            "icon": "fas fa-cog",
            },
            {
            "name": "Nav Tools",
            "url": "/navTools",
            "icon": "fas fa-tools",
            },
        ],
    },
    "site_title": "Bernt's Toerns",
    "site_header": "Bernt's Toerns",
    "site_brand": "Bernt's Toerns",
    "site_icon": "/images/sailingIcon.ico",
    # Add your own branding here
    "site_logo": "/images/sailingIcon.ico",
    "login_logo": "/images/sailingIcon.ico",
    "welcome_sign": "Welcome to Andreas Sailing Admin Site",
    # Copyright on the footer
    "copyright": "Volker Petersen",
    "user_avatar": None,
    ############
    # Top Menu #
    ############
    # Links to put along the top menu
    "topmenu_links": [
        # Url that gets reversed (Permissions can be added)
        {"name": "Bernt's Sailing Home Page", "url": "/"},
        # model admin to link to (Permissions checked against model)
        #{"model": "auth.User"},
    ],

    #############
    # Side Menu #
    #############
    # Whether to display the side menu
    "show_sidebar": True,
    # Whether to aut expand the menu
    "navigation_expanded": True,
    # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2
    # for the full list of 5.13.0 free icon classes
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "users.User": "fas fa-user",
        "auth.Group": "fas fa-users",
        "admin.LogEntry": "fas fa-file",
    },
    # # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-arrow-circle-right",
    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": False,
    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    # Uncomment this line once you create the bootstrap-dark.css file
    # "custom_css": "css/bootstrap-dark.css",
    "custom_js": None,
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": False,
    "custom_css": "css/SailingLog.css",
    ###############
    # Change view #
    ###############
    "changeform_format": "horizontal_tabs",
    # override change forms on a per modeladmin basis
    "changeform_format_overrides": {
        "auth.user": "collapsible",
        "auth.group": "vertical_tabs",
    },
}